services:

  ruby_app:
    container_name: ruby_app
    build: .
    restart: always
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
    networks:
      - internal-network

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - internal-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "5400:8080"
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - internal-network

networks:
  internal-network:
    driver: bridge

volumes:
  postgres_data: